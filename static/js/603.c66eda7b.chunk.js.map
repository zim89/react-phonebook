{"version":3,"file":"static/js/603.c66eda7b.chunk.js","mappings":"uUAAaA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAM,EAE/CC,EAAkB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,SAAU,EAMpDC,EAAyB,SAAHC,GAAsB,IAAhBL,EAAQK,EAARL,SACvC,IAAKA,EAASM,OACZ,OAAON,EAASC,MAElB,IAAMM,EAAmBP,EAASM,OAAOE,cAEzC,OAAOR,EAASC,MAAMK,QAAO,SAAAG,GAAO,OAClCA,EAAQC,KAAKF,cAAcG,SAASJ,EAAiB,GAEzD,E,UCiGA,EAjGsB,WACpB,IAAMK,GAAWC,EAAAA,EAAAA,MACXb,GAAWc,EAAAA,EAAAA,IAAYhB,GAEvBiB,GAAOC,EAAAA,EAAAA,GAAQ,CACnBC,cAAe,CACbP,KAAM,GACNQ,OAAQ,IAGVC,SAAU,CAER,IA4CJ,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACC,OAAO,KAAKC,OAAO,KAAKC,EAAE,KAAIC,UACnCC,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACC,QAAQ,aAAaC,QAAQ,KAAIJ,SAAA,EACtCL,EAAAA,EAAAA,KAACU,EAAAA,EAAI,CAACC,KAAK,KAAKC,OAAQ,IAAKC,GAAG,SAAQR,SAAC,kBAGzCL,EAAAA,EAAAA,KAACc,EAAAA,EAAG,CAACC,EAAG,IAAIV,UACVC,EAAAA,EAAAA,MAAA,QAAMU,SAAUrB,EAAKqB,UA/CR,SAAH/B,GAA0B,IAApBK,EAAIL,EAAJK,KAAMQ,EAAMb,EAANa,OACtBmB,EAAgBrC,EAASsC,MAC7B,SAAA7B,GAAO,OAAIA,EAAQC,KAAKF,gBAAkBE,EAAKF,aAAa,IAGxD+B,EAAkBvC,EAASsC,MAC/B,SAAA7B,GAAO,OACLA,EAAQS,OAAOsB,QAAQ,IAAK,IAAIC,MAAM,KAAKC,KAAK,MAChDxB,EAAOsB,QAAQ,IAAK,IAAIC,MAAM,KAAKC,KAAK,GAAG,IAG3CL,EACFM,EAAAA,GAAAA,KAAmB,CACjBC,GAAI,cACJC,iBAAiB,EACjBC,UAAW,IACXC,MAAO,qBACPC,QAAQ,8BAADC,OAA2BvC,EAAKwC,cAAa,uCACpDC,MAAO,MACPC,SAAS,IAKTb,EACFI,EAAAA,GAAAA,KAAmB,CACjBC,GAAI,cACJC,iBAAiB,EACjBC,UAAW,IACXC,MAAO,qBACPC,QAAQ,gCAADC,OAA6B/B,EAAM,uCAC1CiC,MAAO,MACPC,SAAS,KAIbxC,GAASyC,EAAAA,EAAAA,IAAW,CAAE3C,KAAAA,EAAMQ,OAAAA,KAC5BH,EAAKuC,QACP,IASoD7B,SAAA,EAC1CL,EAAAA,EAAAA,KAACmC,EAAAA,GAASC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACRC,UAAQ,EACRC,cAAY,EACZC,MAAM,eACNC,YAAY,yBACR7C,EAAK8C,cAAc,SAAO,IAC9BC,GAAI,SAGN1C,EAAAA,EAAAA,KAACmC,EAAAA,GAASC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACRO,UAAWC,EAAAA,GACXC,KAAK,YACLR,UAAQ,EACRC,cAAY,EACZC,MAAM,uBACNC,YAAY,aACR7C,EAAK8C,cAAc,WAAS,IAChCC,GAAI,SAGNpC,EAAAA,EAAAA,MAACwC,EAAAA,EAAK,CAACC,SAAS,SAASC,GAAG,KAAI3C,SAAA,EAC9BL,EAAAA,EAAAA,KAACiD,EAAAA,EAAM,CAACC,QAAQ,UAAUC,QAAS,kBAAMxD,EAAKuC,OAAO,EAAC7B,SAAC,WAGvDL,EAAAA,EAAAA,KAACiD,EAAAA,EAAM,CAACG,KAAK,SAAQ/C,SAAC,4BAOpC,E,4DCpFA,EAtBoB,SAAHpB,GAAqC,IAA/BoE,EAASpE,EAAToE,UAAW/D,EAAIL,EAAJK,KAAMQ,EAAMb,EAANa,OAChCN,GAAWC,EAAAA,EAAAA,MAGjB,OACEa,EAAAA,EAAAA,MAAAgD,EAAAA,SAAA,CAAAjD,SAAA,EACEL,EAAAA,EAAAA,KAAA,MAAAK,SAAKf,KACLU,EAAAA,EAAAA,KAAA,MAAAK,SAAKP,KACLE,EAAAA,EAAAA,KAAA,MAAAK,UACEC,EAAAA,EAAAA,MAACwC,EAAAA,EAAK,CAACC,SAAS,SAAStC,QAAQ,KAAIJ,SAAA,EACnCL,EAAAA,EAAAA,KAACuD,EAAAA,EAAU,CAACxB,MAAM,MAAMmB,QAAQ,UAAUC,QAR7B,WAAH,OAAS3D,GAASgE,EAAAA,EAAAA,IAAcH,GAAY,EAQUhD,UAC9DL,EAAAA,EAAAA,KAACyD,EAAAA,EAAS,CAAC9C,KAAK,WAAW,aAAW,cAExCX,EAAAA,EAAAA,KAACuD,EAAAA,EAAU,CAACxB,MAAM,OAAOmB,QAAQ,UAAUC,QAAS,WAAO,EAAE9C,UAC3DL,EAAAA,EAAAA,KAAC0D,EAAAA,EAAQ,CAAC/C,KAAK,WAAW,aAAW,oBAMjD,E,oBCHA,EAjBsB,WACpB,IAAMnB,GAAWC,EAAAA,EAAAA,MAMjB,OACEO,EAAAA,EAAAA,KAACmC,EAAAA,EAAS,CACRK,YAAY,iBACZE,GAAG,KACHiB,MAAM3D,EAAAA,EAAAA,KAAC4D,EAAAA,EAAU,CAACjD,KAAK,SAASkD,OAAQ,MACxCC,SATuB,SAAAC,GACzBvE,GAASwE,EAAAA,EAAAA,GAAUD,EAAEE,OAAOC,OAC9B,GAUF,ECmCA,EA7CoB,WAClB,IAAMtF,GAAWc,EAAAA,EAAAA,IAAYV,GACvBD,GAAYW,EAAAA,EAAAA,IAAYZ,GAE9B,OACEkB,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACC,OAAO,KAAKC,OAAO,KAAKC,EAAE,KAAK+D,GAAI,CAAEC,MAAO,SAAU/D,UAC3DC,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACC,QAAQ,aAAaC,QAAQ,KAAIJ,SAAA,EACtCL,EAAAA,EAAAA,KAACU,EAAAA,EAAI,CAACC,KAAK,KAAKC,OAAQ,IAAKC,GAAG,SAAQR,SAAC,oBAGzCL,EAAAA,EAAAA,KAACqE,EAAa,IACbzF,EAAS0F,OAAS,IACjBhE,EAAAA,EAAAA,MAACiE,EAAAA,EAAK,CAACC,gBAAgB,KAAInE,SAAA,EACzBL,EAAAA,EAAAA,KAAA,SAAAK,UACEC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEL,EAAAA,EAAAA,KAAA,MAAIoE,MAAM,QAAO/D,SAAC,UAClBL,EAAAA,EAAAA,KAAA,MAAAK,SAAI,YACJL,EAAAA,EAAAA,KAAA,MAAAK,SAAI,kBAGRL,EAAAA,EAAAA,KAAA,SAAAK,SACGzB,EAAS6F,KAAI,SAAAxF,GAAA,IAAGuC,EAAEvC,EAAFuC,GAAIlC,EAAIL,EAAJK,KAAMQ,EAAMb,EAANa,OAAM,OAC/BE,EAAAA,EAAAA,KAAA,MAAAK,UACEL,EAAAA,EAAAA,KAAC0E,EAAW,CAACrB,UAAW7B,EAAIlC,KAAMA,EAAMQ,OAAQA,KADzC0B,EAEJ,UAMXzC,GAAiC,IAApBH,EAAS0F,SACtBtE,EAAAA,EAAAA,KAAC2E,EAAAA,EAAK,CACJhB,MAAM3D,EAAAA,EAAAA,KAAC4E,EAAAA,EAAe,CAACjE,KAAK,SAC5BgB,MAAM,aACNI,MAAM,MAAK1B,SACZ,2FAQX,ECjBA,EA7BiB,WACf,IAAMb,GAAWC,EAAAA,EAAAA,MAMjB,OAJAoF,EAAAA,EAAAA,YAAU,WACRrF,GAASsF,EAAAA,EAAAA,MACX,GAAG,CAACtF,KAGFc,EAAAA,EAAAA,MAAAgD,EAAAA,SAAA,CAAAjD,SAAA,EACEL,EAAAA,EAAAA,KAAC+E,EAAAA,EAAM,CAAA1E,UACLL,EAAAA,EAAAA,KAAA,SAAAK,SAAO,qBAETC,EAAAA,EAAAA,MAAC0E,EAAAA,EAAI,CACHC,MAAM,aACNC,UAAW,CAAEC,KAAM,SAAUC,GAAI,OACjCC,IAAK,CAAEF,KAAM,KAAMC,GAAI,MACvB5E,QAAS,CAAE4E,GAAI,UAAW/E,SAAA,EAE1BL,EAAAA,EAAAA,KAACc,EAAAA,EAAG,CAAAT,UACFL,EAAAA,EAAAA,KAACsF,EAAa,OAEhBtF,EAAAA,EAAAA,KAACc,EAAAA,EAAG,CAAAT,UACFL,EAAAA,EAAAA,KAACuF,EAAW,WAKtB,C","sources":["redux/contacts/selectors.js","components/ContactEditor/ContactEditor.jsx","components/ContactItem/ContactItem.jsx","components/ContactFilter/ContactFilter.jsx","components/ContactList/ContactList.jsx","pages/Contacts.js"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectFilteredContacts = ({ contacts }) => {\n  if (!contacts.filter) {\n    return contacts.items;\n  }\n  const normalizedFilter = contacts.filter.toLowerCase();\n\n  return contacts.items.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n};\n","import React from 'react';\nimport {\n  Text,\n  TextInput,\n  Stack,\n  Button,\n  Group,\n  Box,\n  Paper,\n} from '@mantine/core';\nimport { notifications } from '@mantine/notifications';\nimport { IMaskInput } from 'react-imask';\nimport { useForm } from '@mantine/form';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nconst ContactEditor = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const form = useForm({\n    initialValues: {\n      name: '',\n      number: '',\n    },\n\n    validate: {\n      // name: value => (/^\\S+@\\S+$/.test(value) ? null : 'Invalid email'),\n      // number: value => (/^\\S+@\\S+$/.test(value) ? null : 'Invalid email'),\n    },\n  });\n\n  const handleSubmit = ({ name, number }) => {\n    const isIncludeName = contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    const isIncludeNumber = contacts.some(\n      contact =>\n        contact.number.replace('+', '').split('-').join('') ===\n        number.replace('+', '').split('-').join('')\n    );\n\n    if (isIncludeName) {\n      notifications.show({\n        id: 'hello-there',\n        withCloseButton: true,\n        autoClose: 5000,\n        title: 'We notify you that',\n        message: `Сontact with the name ${name.toUpperCase()} is already in your telephone book!`,\n        color: 'red',\n        loading: false,\n      });\n      return;\n    }\n\n    if (isIncludeNumber) {\n      notifications.show({\n        id: 'hello-there',\n        withCloseButton: true,\n        autoClose: 5000,\n        title: 'We notify you that',\n        message: `Сontact with the number ${number} is already in your telephone book!`,\n        color: 'red',\n        loading: false,\n      });\n      return;\n    }\n    dispatch(addContact({ name, number }));\n    form.reset();\n  };\n\n  return (\n    <Paper shadow=\"sm\" radius=\"md\" p=\"md\">\n      <Stack justify=\"flex-start\" spacing=\"xl\">\n        <Text size=\"md\" weight={600} ta=\"center\">\n          Add contact:\n        </Text>\n        <Box w={300}>\n          <form onSubmit={form.onSubmit(handleSubmit)}>\n            <TextInput\n              required\n              withAsterisk\n              label=\"Contact name\"\n              placeholder=\"Enter contact name...\"\n              {...form.getInputProps('name')}\n              mb={'sm'}\n            />\n\n            <TextInput\n              component={IMaskInput}\n              mask=\"000-00-00\"\n              required\n              withAsterisk\n              label=\"Contact phone number\"\n              placeholder=\"000-00-00\"\n              {...form.getInputProps('number')}\n              mb={'sm'}\n            />\n\n            <Group position=\"center\" mt=\"md\">\n              <Button variant=\"outline\" onClick={() => form.reset()}>\n                Reset\n              </Button>\n              <Button type=\"submit\">Add Contact</Button>\n            </Group>\n          </form>\n        </Box>\n      </Stack>\n    </Paper>\n  );\n};\n\nexport default ContactEditor;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { ActionIcon, Group } from '@mantine/core';\nimport { IconTrash, IconEdit } from '@tabler/icons-react';\nimport { deleteContact } from 'redux/contacts/operations';\n\nconst ContactItem = ({ contactId, name, number }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContact(contactId));\n\n  return (\n    <>\n      <td>{name}</td>\n      <td>{number}</td>\n      <td>\n        <Group position=\"center\" spacing=\"xs\">\n          <ActionIcon color=\"red\" variant=\"outline\" onClick={handleDelete}>\n            <IconTrash size=\"1.125rem\" aria-label=\"Delete\" />\n          </ActionIcon>\n          <ActionIcon color=\"cyan\" variant=\"outline\" onClick={() => {}}>\n            <IconEdit size=\"1.125rem\" aria-label=\"Delete\" />\n          </ActionIcon>\n        </Group>\n      </td>\n    </>\n  );\n};\n\nexport default ContactItem;\n","import React from 'react';\nimport { TextInput } from '@mantine/core';\nimport { IconSearch } from '@tabler/icons-react';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/contacts/slice';\n\nconst ContactFilter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilterChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <TextInput\n      placeholder=\"Search by name\"\n      mb=\"md\"\n      icon={<IconSearch size=\"0.9rem\" stroke={1.5} />}\n      onChange={handleFilterChange}\n    />\n  );\n};\n\nexport default ContactFilter;\n","import React from 'react';\nimport { Text, Alert, Paper, Table, Stack } from '@mantine/core';\nimport { IconAlertCircle } from '@tabler/icons-react';\nimport { useSelector } from 'react-redux';\nimport {\n  selectIsLoading,\n  selectFilteredContacts,\n} from 'redux/contacts/selectors';\nimport ContactItem from 'components/ContactItem/ContactItem';\nimport ContactFilter from 'components/ContactFilter/ContactFilter';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectFilteredContacts);\n  const isLoading = useSelector(selectIsLoading);\n\n  return (\n    <Paper shadow=\"sm\" radius=\"sm\" p=\"md\" sx={{ width: '420px' }}>\n      <Stack justify=\"flex-start\" spacing=\"xl\">\n        <Text size=\"md\" weight={600} ta=\"center\">\n          Your contacts:\n        </Text>\n        <ContactFilter />\n        {contacts.length > 0 && (\n          <Table verticalSpacing=\"xs\">\n            <thead>\n              <tr>\n                <th width=\"200px\">Name</th>\n                <th>Number</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {contacts.map(({ id, name, number }) => (\n                <tr key={id}>\n                  <ContactItem contactId={id} name={name} number={number} />\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        )}\n\n        {!isLoading && contacts.length === 0 && (\n          <Alert\n            icon={<IconAlertCircle size=\"1rem\" />}\n            title=\"Attention!\"\n            color=\"red\"\n          >\n            Something terrible happened! You don't have any saved contacts in\n            your phone book!\n          </Alert>\n        )}\n      </Stack>\n    </Paper>\n  );\n};\n\nexport default ContactList;\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Box, Flex } from '@mantine/core';\nimport { Helmet } from 'react-helmet';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport ContactEditor from 'components/ContactEditor/ContactEditor';\nimport ContactList from 'components/ContactList/ContactList';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <Flex\n        align=\"flex-start\"\n        direction={{ base: 'column', sm: 'row' }}\n        gap={{ base: 'sm', sm: 'lg' }}\n        justify={{ sm: 'center' }}\n      >\n        <Box>\n          <ContactEditor />\n        </Box>\n        <Box>\n          <ContactList />\n        </Box>\n      </Flex>\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectFilteredContacts","_ref","filter","normalizedFilter","toLowerCase","contact","name","includes","dispatch","useDispatch","useSelector","form","useForm","initialValues","number","validate","_jsx","Paper","shadow","radius","p","children","_jsxs","Stack","justify","spacing","Text","size","weight","ta","Box","w","onSubmit","isIncludeName","some","isIncludeNumber","replace","split","join","notifications","id","withCloseButton","autoClose","title","message","concat","toUpperCase","color","loading","addContact","reset","TextInput","_objectSpread","required","withAsterisk","label","placeholder","getInputProps","mb","component","IMaskInput","mask","Group","position","mt","Button","variant","onClick","type","contactId","_Fragment","ActionIcon","deleteContact","IconTrash","IconEdit","icon","IconSearch","stroke","onChange","e","setFilter","target","value","sx","width","ContactFilter","length","Table","verticalSpacing","map","ContactItem","Alert","IconAlertCircle","useEffect","fetchContacts","Helmet","Flex","align","direction","base","sm","gap","ContactEditor","ContactList"],"sourceRoot":""}